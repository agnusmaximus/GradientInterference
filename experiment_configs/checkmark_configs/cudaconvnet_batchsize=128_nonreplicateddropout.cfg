Cfg({
    "name" : "gradient_interference_cudaconvnet_workers=1_batchsize=128_nonreplicateddropout",
    "key_name": "MaxLamKeyPair2",          # Necessary to ssh into created instances

    # Cluster topology
    "n_masters" : 1,                      # Should always be 1
    "n_workers" : 0,
    "n_ps" : 0,
    "n_evaluators" : 0,                   # Continually validates the model on the validation data

    "method" : "spot",

    # Region speficiation
    "region" : "us-west-2",
    "availability_zone" : "us-west-2a",

    # Machine type - instance type configuration.
    "master_type" : "p2.xlarge",
    "worker_type" : "p2.xlarge",
    "ps_type" : "p2.xlarge",
    "evaluator_type" : "p2.xlarge",
    "image_id": "ami-f9fe7799", # GradientInterferenceGPU

    # Launch specifications
    "spot_price" : ".5",                 # Has to be a string

    # SSH configuration
    "ssh_username" : "ubuntu",            # For sshing. E.G: ssh ssh_username@hostname
    "path_to_keyfile" : "/Users/maxlam/Desktop/School/Fall2016/Research/DistributedSGD/MaxLamKeyPair2.pem",

    # NFS configuration
    # To set up these values, go to Services > ElasticFileSystem > Create new filesystem, and follow the directions.
    "nfs_ip_address" : "172.31.38.15", # us-west-2a
   #"nfs_ip_address" : "172.31.6.18",         # us-west-2c
   #"nfs_ip_address" : "172.31.30.114",         # us-west-2b
    "nfs_mount_point" : "/home/ubuntu/inception_shared",       # NFS base dir
    "base_out_dir" : "%(nfs_mount_point)s/%(name)s", # Master writes checkpoints to this directory. Outfiles are written to this directory.

    "setup_commands" :
    [
        "sudo rm -rf %(base_out_dir)s",
        "mkdir %(base_out_dir)s",
    ],

    # Command specification
    # Master pre commands are run only by the master
    "master_pre_commands" :
    [
        "cd GradientInterference",
        "git fetch && git reset --hard origin/master",
    ],

    # Pre commands are run on every machine before the actual training.
    "pre_commands" :
    [
        "cd GradientInterference",
        "git fetch && git reset --hard origin/master",
    ],

    # Model configuration
    "batch_size" : "128",
    "learning_rate" : ".002",
    "dataset_fraction" : "1",

    # Train command specifies how the ps/workers execute tensorflow.
    # PS_HOSTS - special string replaced with actual list of ps hosts.
    # TASK_ID - special string replaced with actual task index.
    # JOB_NAME - special string replaced with actual job name.
    # WORKER_HOSTS - special string replaced with actual list of worker hosts
    # ROLE_ID - special string replaced with machine's identity (E.G: master, worker0, worker1, ps, etc)
    # %(...)s - Inserts self referential string value.
    "train_commands" :
    [
        "python cuda_convnet/src/cudaconvnet_single_train.py "
        "--batch_size=%(batch_size)s "
        "--learning_rate=%(learning_rate)s "
        "--train_dir=%(base_out_dir)s/train_dir " "--shared_filesystem_directory=%(base_out_dir)s "
        "--dataset_fraction=%(dataset_fraction)s " "--dropout=true "
        "> %(base_out_dir)s/out_ROLE_ID 2>&1 &"
    ],

    # Commands to run on the evaluator
    "evaluate_commands" :
    [
    ],
})
